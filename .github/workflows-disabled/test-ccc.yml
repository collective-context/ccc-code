name: test-ccc

on:
  push:
    paths:
      - 'ccc/**'
      - 'tests-ccc/**'
      - 'setup.py'
      - 'install'
      - '.github/workflows/test-ccc.yml'
  pull_request:
    paths:
      - 'ccc/**'
      - 'tests-ccc/**'
      - 'setup.py'
      - 'install'
      - '.github/workflows/test-ccc.yml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y python3-venv git
    
    - name: Install CCC via install script
      run: |
        sudo -E bash install
    
    - name: Verify CCC installation
      run: |
        which ccc
        ccc --version
        ccc --help
        ccc info
    
    - name: Run bash tests
      run: |
        sudo bash tests-ccc/travis.sh --ci
    
    - name: Install pytest for unit tests
      run: |
        pip install pytest
    
    - name: Run pytest
      run: |
        pytest tests-ccc/cli/ -v
    
    - name: Test clean plugin
      run: |
        ccc clean --help
    
    - name: Test info plugin
      run: |
        ccc info --help
    
    - name: Test secure plugin
      run: |
        ccc secure --help
    
    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ccc-test-logs-py${{ matrix.python-version }}
        path: logs/
        if-no-files-found: ignore
